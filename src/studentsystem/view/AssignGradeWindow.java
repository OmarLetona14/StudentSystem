/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentsystem.view;

import java.awt.Image;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import studentsystem.list.DoubleLinkedListStudentSemester;
import studentsystem.list.SimpleLinkedListCurrentGrade;
import studentsystem.list.SimplyLinkedListAssigned;
import studentsystem.model.CurrentGradeStudentTableModel;
import studentsystem.model.CurrentGradeTableModel;
import studentsystem.model.Grade;
import studentsystem.model.GradeTableModel;
import studentsystem.model.Semester;

/**
 *
 * @author Omar
 */
public class AssignGradeWindow extends javax.swing.JFrame {
    
    public static Grade currentGrade;
    
    /**
     * Creates new form AssignGradeWindow
     */
    public AssignGradeWindow() throws Exception {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        CurrentGradeStudentTableModel model = new CurrentGradeStudentTableModel();
        for(int i=1; i<GradeTableModel.gradesList.listSize();i++){
            try {
                currentGrade = GradeTableModel.gradesList.getGradeAt(i);
            } catch (Exception ex) {
                Logger.getLogger(GradeAdministrationWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        gradeCb.addItem(currentGrade.getName());
        }
       
        userLabel.setText(LoginWindow.currentStudent.getName());
   
        
        ImageIcon backgroundLogoimg = new ImageIcon(getClass().getResource("../systemimages/logo.png"));
        Icon backgroundLogoicn = new ImageIcon(backgroundLogoimg.getImage().getScaledInstance(LogoImageLbl.getWidth(),
                LogoImageLbl.getHeight(), Image.SCALE_DEFAULT));
        LogoImageLbl.setIcon(backgroundLogoicn);
        ImageIcon backgroundUserimg = new ImageIcon(getClass().getResource("../systemimages/login.jpeg"));
        Icon backgroundUsericn = new ImageIcon(backgroundUserimg.getImage().getScaledInstance(userImageLbl.getWidth(),
                userImageLbl.getHeight(), Image.SCALE_DEFAULT));
        userImageLbl.setIcon(backgroundUsericn);
        this.repaint();
        
        

    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogoImageLbl = new javax.swing.JLabel();
        userImageLbl = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        gradeCb = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        assignBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LogoImageLbl.setBackground(new java.awt.Color(0, 0, 0));
        LogoImageLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/studentsystem/systemimages/logo.png"))); // NOI18N

        backButton.setText("Atr√°s");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        gradeCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ""}));

        jLabel2.setText("Curso");

        assignBtn.setText("Asignarse");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LogoImageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(assignBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(userImageLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(userLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(gradeCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(257, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(LogoImageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userImageLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gradeCb, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(assignBtn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(117, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        
        try {
            currentGrade = getGrade(idRefe());
        } catch (Exception ex) {
            Logger.getLogger(AssignGradeWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if(LoginWindow.currentStudent.getSemester().getCurrentGradeList(currentGrade.getSemester())==null){
                SimpleLinkedListCurrentGrade listaCursos = new SimpleLinkedListCurrentGrade();
                LoginWindow.currentStudent.getSemester().addToFinal(currentGrade.getSemester(), listaCursos);
            }
            if(!LoginWindow.currentStudent.getSemester().getCurrentGradeList(currentGrade.getSemester()).assigned(currentGrade.getNoGrade(),
                    LoginWindow.currentStudent.getIdStudent())){
                if(LoginWindow.currentStudent.getSemester().getCurrentGradeList(currentGrade.getSemester()).listSize()<4){
                    try {
                    if(LoginWindow.currentStudent.getSemester().getCurrentGradeList(currentGrade.getSemester()).getClassByGrade(
                            currentGrade.getNoGrade())!=null){
                            LoginWindow.currentStudent.getSemester().getCurrentGradeList(currentGrade.getSemester()).getClassByGrade(
                            currentGrade.getNoGrade()).addToFinal(LoginWindow.currentStudent, 0, "REPROBADO");
                    }else{
                        LoginWindow.currentStudent.getSemester().getCurrentGradeList(currentGrade.getSemester()).addToFinal(currentGrade, 
                                new SimplyLinkedListAssigned());
                        
                        LoginWindow.currentStudent.getSemester().getCurrentGradeList(currentGrade.getSemester()).getClassByGrade(
                            currentGrade.getNoGrade()).addToFinal(LoginWindow.currentStudent, 0, "REPROBADO");
                    }
                    
                    currentGrade.getProfessor().getSemester().getListaCursos(currentGrade.getSemester()).getClass(currentGrade.getProfessor().getCarnet()).addToFinal(
                            LoginWindow.currentStudent, 0, "REPROBADO");
                    JOptionPane.showMessageDialog(this, "Curso asignado correctamente", "Asignado",
                            JOptionPane.INFORMATION_MESSAGE);
                     
                    } catch (Exception ex) {
                        Logger.getLogger(AssignGradeWindow.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(this, "Hubo un error al asignarse el curso", "Error",
                                JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "No se puede asignar mas de tres cursos por semestre", "Error",
                        JOptionPane.ERROR_MESSAGE);
                }
                
            }else{   
                JOptionPane.showMessageDialog(this, "Este curso ya ha sido asignado", "Error",
                        JOptionPane.ERROR_MESSAGE);
            }   
        } catch (Exception ex) {
            Logger.getLogger(AssignGradeWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_assignBtnActionPerformed

    
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
       this.dispose();
       StudentWindow s = new StudentWindow();
       s.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    public Grade getGrade(int idRef) throws Exception{
        return GradeTableModel.gradesList.getGradeAt(idRef);
    } 
    public int idRefe(){
        if(!gradeCb.getSelectedItem().equals("")){
            Grade currentG = GradeTableModel.gradesList.getGradeByName(String.valueOf(gradeCb.getSelectedItem()));
            return currentG.getIdGrade();
        }else{
            return 0;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignGradeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignGradeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignGradeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignGradeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AssignGradeWindow().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(AssignGradeWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LogoImageLbl;
    private javax.swing.JButton assignBtn;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox<String> gradeCb;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel userImageLbl;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
